{"version":3,"file":"li-log.min.js","sources":["../src/lib/utils.js","../src/lib/li-log-core.js"],"sourcesContent":["function copyDeep(baseObj) {\r\n    function cloneObject(obj) {\r\n        const clone = {};\r\n        const objKeys = Object.keys(obj);\r\n        let i = objKeys.length;\r\n\r\n        while (i) {\r\n            const key = objKeys[i];\r\n\r\n            if (typeof (obj[key]) === 'object' && obj[key] !== null) {\r\n                clone[key] = cloneObject(obj[key]);\r\n            } else {\r\n                clone[key] = obj[key];\r\n            }\r\n\r\n            i -= 1;\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    const newObj = {};\r\n    const keys = Object.keys(baseObj);\r\n\r\n    let j = keys.length;\r\n\r\n    while (j) {\r\n        const key = keys[j];\r\n        const current = baseObj[key];\r\n\r\n        if (Array.isArray(current)) {\r\n            newObj[key] = current.slice(0);\r\n        } else if (typeof current === 'object') {\r\n            newObj[key] = cloneObject(current);\r\n        } else {\r\n            newObj[key] = current;\r\n        }\r\n\r\n        j -= 1;\r\n    }\r\n\r\n    return newObj;\r\n}\r\n\r\nfunction mergeOptions(baseOptions, userOptions) {\r\n    const resultOptions = copyDeep(baseOptions);\r\n    const keys = Object.keys(userOptions);\r\n\r\n    let i = keys.length;\r\n\r\n    while (i) {\r\n        const key = keys[i];\r\n\r\n        resultOptions[key] = userOptions[key];\r\n\r\n        i -= 1;\r\n    }\r\n\r\n    return resultOptions;\r\n}\r\n\r\nconst isBrowser = (() => {\r\n    try {\r\n        return Boolean(window);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n})();\r\n\r\nconst isNode = (() => {\r\n    try {\r\n        return Boolean(global);\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n})();\r\n\r\nfunction getTime() {\r\n    const date = new Date();\r\n    const hours = pad(date.getHours());\r\n    const minutes = pad(date.getMinutes());\r\n    const seconds = pad(date.getSeconds());\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nfunction pad(val) {\r\n    const length = 2;\r\n    let value = String(val);\r\n\r\n    while (value.length < length) {\r\n        value = '0' + val;\r\n    }\r\n    return value;\r\n}\r\n\r\nconst utils = {\r\n    mergeOptions,\r\n    isBrowser,\r\n    isNode,\r\n    getTime,\r\n};\r\n\r\nexport default utils;\r\n","import DateTimeFormat from 'format-date-time';\r\nimport utils from './utils';\r\n\r\n// default browser text styles\r\nconst browserConsoleStyles = {\r\n    debug: 'font-browserStyle: italic; color: #1B2B34;',\r\n    info: 'color: #6699CC;',\r\n    warning: 'font-weight: bold; color: #AB7967;',\r\n    error: 'font-weight: bold; color: #E24825;',\r\n    critical: 'font-weight: bold; color: #FAFAFA; padding: 3px; background: linear-gradient(#D33106, #571402);',\r\n};\r\n\r\nfunction Log(userOptions) {\r\n    const { isBrowser, isNode, mergeOptions } = utils;\r\n    const baseOptions = {\r\n        level: 1, // info as default\r\n        coloredOutput: true,\r\n        outputMethodOnly: [],\r\n        logMethods: [\r\n            {\r\n                name: 'debug',\r\n                level: 0,\r\n                browserStyle: browserConsoleStyles.debug,\r\n            },\r\n            {\r\n                name: 'info',\r\n                level: 1,\r\n                browserStyle: browserConsoleStyles.info,\r\n            },\r\n            {\r\n                name: 'warning',\r\n                level: 2,\r\n                browserStyle: browserConsoleStyles.warning,\r\n            },\r\n            {\r\n                name: 'error',\r\n                level: 3,\r\n                browserStyle: browserConsoleStyles.error,\r\n            },\r\n            {\r\n                name: 'critical',\r\n                level: 4,\r\n                browserStyle: browserConsoleStyles.critical,\r\n            },\r\n        ],\r\n        transport: [\r\n            function finalLog(data) {\r\n                if (isBrowser) {\r\n                    if (baseOptions.coloredOutput) {\r\n                        console.log(data.message, data.browserStyle);\r\n                    } else {\r\n                        console.log(data.message);\r\n                    }\r\n                } else {\r\n                    console.log(data.message);\r\n                }\r\n            },\r\n        ],\r\n    };\r\n    let dateTimeFormatter;\r\n    let options = baseOptions;\r\n    let loggerDisabled = false;\r\n\r\n    if (isNode) {\r\n        dateTimeFormatter = new DateTimeFormat('HH:mm:ss');\r\n    }\r\n\r\n    if (typeof userOptions === 'object') {\r\n        options = mergeOptions(baseOptions, userOptions);\r\n    } else if (typeof userOptions === 'string' && userOptions === 'no-color') {\r\n        baseOptions.coloredOutput = false;\r\n    }\r\n\r\n    function log(logOptions, methodInfo, args) {\r\n        if (loggerDisabled\r\n            || methodInfo.level < logOptions.level\r\n            || (logOptions.outputMethodOnly.length\r\n                && !logOptions.outputMethodOnly.includes(methodInfo.name))) return;\r\n\r\n        let message;\r\n\r\n        if (isNode) {\r\n            message = `${dateTimeFormatter.now()} <${methodInfo.name}> ${args}`;\r\n        } else {\r\n            message = `${utils.getTime()} <${methodInfo.name}> ${args}`;\r\n        }\r\n\r\n        if (logOptions.coloredOutput) {\r\n            if (isBrowser) {\r\n                message = `%c${message}`;\r\n            } else if (isNode) {\r\n                message = `${message}`;\r\n            }\r\n        }\r\n\r\n        const data = {\r\n            message,\r\n            browserStyle: methodInfo.browserStyle,\r\n            nodeStyle: methodInfo.nodeStyle,\r\n        };\r\n\r\n        logOptions.transport.forEach((fn) => {\r\n            if (typeof fn === 'function') {\r\n                fn(data);\r\n            } else {\r\n                throw new Error('Transport item not a function');\r\n            }\r\n        });\r\n    }\r\n\r\n    options.logMethods.forEach((methodInfo) => {\r\n        if (methodInfo.level >= options.level) {\r\n            this[methodInfo.name] = (...args) => log(options, methodInfo, args);\r\n        } else {\r\n            this[methodInfo.name] = () => {\r\n            };\r\n        }\r\n    });\r\n\r\n    this.setLevel = (level) => {\r\n        if (Number.isInteger(level)) {\r\n            options.level = level;\r\n        } else if (typeof level === 'string') {\r\n            const methods = options.logMethods.filter(method => method.name === level);\r\n\r\n            if (Array.isArray(methods) && methods.length) {\r\n                options.level = methods[0].level;\r\n            }\r\n        } else {\r\n            console.log(`setLevel() level ${level} was not found in LiLog instance`);\r\n        }\r\n    };\r\n\r\n    this.disable = () => {\r\n        loggerDisabled = true;\r\n    };\r\n\r\n    this.outputOnly = (methods) => {\r\n        if (Array.isArray(methods)) {\r\n            options.outputMethodOnly = methods;\r\n        } else if (typeof methods === 'string') {\r\n            options.outputMethodOnly = [methods];\r\n        }\r\n    };\r\n\r\n    this.disableOutputOnlyOption = () => {\r\n        options.outputMethodOnly = [];\r\n    };\r\n}\r\n\r\nexport { Log as default };\r\n"],"names":["clone","objKeys","Object","keys","i","length","key","babelHelpers.typeof","obj","cloneObject","newObj","j","current","baseObj","Array","isArray","slice","value","isBrowser","window","isNode","global","utils","resultOptions","copyDeep","userOptions","date","Date","hours","pad","getHours","minutes","getMinutes","seconds","getSeconds","browserConsoleStyles","loggerDisabled","methodInfo","level","logOptions","outputMethodOnly","includes","name","message","dateTimeFormatter","now","getTime","coloredOutput","data","browserStyle","nodeStyle","transport","forEach","Error","mergeOptions","baseOptions","debug","info","warning","error","critical","log","options","logMethods","args","setLevel","Number","isInteger","methods","filter","method","disable","outputOnly","disableOutputOnlyOption"],"mappings":"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"}