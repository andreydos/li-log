{"version":3,"file":"liLog.browser.min.js","sources":["../src/utils.js","../src/browser-version/log.browser.js","../src/browser.js","../src/browser-version/console.js"],"sourcesContent":["function mergeOptions(baseOptions, userOptions) {\r\n    \"use strict\";\r\n    const resultOptions = copyDeep(baseOptions),\r\n        keys = Object.keys(userOptions);\r\n\r\n    for (let i = keys.length - 1; i >= 0; i--) {\r\n        const key = keys[i];\r\n\r\n        resultOptions[key] = userOptions[key];\r\n    }\r\n\r\n    return resultOptions;\r\n}\r\n\r\nfunction copyDeep(baseObj) {\r\n    function cloneObject(obj) {\r\n        const clone = {};\r\n\r\n        const objKeys = Object.keys(obj);\r\n\r\n        for (let i = objKeys.length - 1; i >= 0; i--) {\r\n            const key = objKeys[i];\r\n            \r\n            if(typeof(obj[key])===\"object\" && obj[key] !== null) {\r\n                clone[key] = cloneObject(obj[key]);\r\n            } else {\r\n                clone[key] = obj[key];\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    const newObj = {},\r\n        keys = Object.keys(baseObj);\r\n\r\n    for (let i = keys.length - 1; i >= 0; i--) {\r\n        const key = keys[i],\r\n            current = baseObj[key];\r\n        if (Array.isArray(current)) {\r\n            newObj[key] = current.slice(0);\r\n        } else if (typeof current === 'object') {\r\n            newObj[key] = cloneObject(current);\r\n        } else {\r\n            newObj[key] = current;\r\n        }\r\n    }\r\n\r\n    return newObj;\r\n}\r\n\r\nexport {\r\n    mergeOptions\r\n}","import * as utils from '../utils';\r\n\r\n// default styles\r\nconst styles = {\r\n    debug: \"font-style: italic; color: #1B2B34;\",\r\n    info: \"color: #6699CC;\",\r\n    warning: \"font-weight: bold; color: #AB7967;\",\r\n    error: \"font-weight: bold; color: #E24825;\",\r\n    critical: \"font-weight: bold; color: #FAFAFA; padding: 3px; background: linear-gradient(#D33106, #571402);\"\r\n};\r\n\r\nfunction Log(userOptions) {\r\n    const baseOptions = {\r\n            level: 1, // info as default\r\n            logMethods: [\r\n                {\r\n                    name: 'debug',\r\n                    level: 0,\r\n                    style: styles.debug\r\n                },\r\n                {\r\n                    name: 'info',\r\n                    level: 1,\r\n                    style: styles.info\r\n                },\r\n                {\r\n                    name: 'warning',\r\n                    level: 2,\r\n                    style: styles.warning\r\n                },\r\n                {\r\n                    name: 'error',\r\n                    level: 3,\r\n                    style: styles.error\r\n                },\r\n                {\r\n                    name: 'critical',\r\n                    level: 4,\r\n                    style: styles.critical\r\n                }\r\n            ],\r\n            transport: [\r\n                function (data) {\r\n                    console.log(data.text, data.style);\r\n                }\r\n            ],\r\n        };\r\n\r\n    const options = userOptions ? utils.mergeOptions(baseOptions, userOptions) : baseOptions;\r\n\r\n    options.logMethods.forEach((methodInfo) => {\r\n        if (methodInfo.level >= options.level) {\r\n            this[methodInfo.name] = function (...args) {\r\n                return log(options, methodInfo, args);\r\n            };\r\n        } else {\r\n            this[methodInfo.name] = function () {};\r\n        }\r\n    });\r\n\r\n    this.setLevel = function (level) {\r\n        if (Number.isInteger(level)) {\r\n            options.level = level;\r\n        } else if (typeof level === 'string') {\r\n            const methods = options.logMethods.filter((method) => {\r\n                return method.name === level;\r\n            });\r\n            if (Array.isArray(methods) && methods.length) {\r\n                options.level = methods[0].level;\r\n            }\r\n        } else {\r\n            console.log(`setLevel() level ${level} was not found in LiLog instance`);\r\n        }\r\n    };\r\n\r\n    function log(options, methodInfo, args) {\r\n        if (methodInfo.level < options.level) return;\r\n\r\n        const data = {\r\n            text: `%c${methodInfo.name} ${args}`,\r\n            style: methodInfo.style\r\n        };\r\n\r\n        options.transport.forEach((fn) => {\r\n            if (typeof fn === 'function') {\r\n                fn(data);\r\n            } else {\r\n                throw new Error('Transport item not a function');\r\n            }\r\n        });\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport { Log };","import { toConsole as console} from './browser-version/console';\r\nimport { Log as Logger } from './browser-version/log.browser';\r\n\r\nLogger.console = console;\r\n\r\nexport default Logger;\r\n\r\n","import { Log } from './log.browser.js';\r\n\r\nexport function toConsole(options) {\r\n    return new Log(options);\r\n}"],"names":["resultOptions","copyDeep","keys","Object","i","length","userOptions","clone","objKeys","obj","cloneObject","newObj","key","current","baseObj","Array","isArray","slice","methodInfo","level","options","data","name","style","transport","forEach","Error","baseOptions","styles","debug","info","warning","error","critical","log","text","utils","logMethods","args","setLevel","Number","isInteger","methods","filter","method","console"],"mappings":"kLAAA,eAAgD,KAKvC,MAHCA,EAAgBC,IAGjB,CAFDC,EAAOC,OAAOD,IAAPC,GAEN,CAAIC,EAAIF,EAAKG,MAALH,CAAc,EAAQ,CAALE,IAAQA,MACtBF,UAESI,cAM7B,aAA2B,cACG,KAKjB,MAJCC,IAID,CAFCC,EAAUL,OAAOD,IAAPC,GAEX,CAAIC,EAAII,EAAQH,MAARG,CAAiB,EAAQ,CAALJ,IAAQA,MACzBI,UAEU,QAAnB,KAAOC,IAAP,GAA4C,IAAbA,QACjBC,EAAYD,IAAZC,EAEAD,kBAUpB,GAHCE,KAGD,CAFDT,EAAOC,OAAOD,IAAPC,GAEN,CAAIC,EAAIF,EAAKG,MAALH,CAAc,EAAQ,CAALE,IAAQA,IAAK,IACjCQ,GAAMV,KACRW,EAAUC,SAFyB,CAGnCC,MAAMC,OAAND,GAHmC,CAIrBF,EAAQI,KAARJ,CAAc,CAAdA,CAJqB,CAKT,QAAnB,0CAAA,CAL4B,CAMrBH,IANqB,YCzB/C,aAA0B,kBAgEkB,MAChCQ,EAAWC,KAAXD,CAAmBE,EAAQD,WAEzBE,GAAO,WACEH,EAAWI,UADb,OAEFJ,EAAWK,KAFT,WAKLC,UAAUC,QAAQ,WAAQ,IACZ,UAAd,0BAGM,IAAIC,MAAJ,CAAU,+BAAV,CAJd,iBAvEEC,EAAc,OACL,CADK,YAEA,CACR,MACU,OADV,OAEW,CAFX,OAGWC,EAAOC,KAHlB,CADQ,CAMR,MACU,MADV,OAEW,CAFX,OAGWD,EAAOE,IAHlB,CANQ,CAWR,MACU,SADV,OAEW,CAFX,OAGWF,EAAOG,OAHlB,CAXQ,CAgBR,MACU,OADV,OAEW,CAFX,OAGWH,EAAOI,KAHlB,CAhBQ,CAqBR,MACU,UADV,OAEW,CAFX,OAGWJ,EAAOK,QAHlB,CArBQ,CAFA,WA6BD,CACP,WAAgB,SACJC,IAAIb,EAAKc,KAAMd,EAAKE,MAFzB,CAAA,CA7BC,EAoCdH,EAAUd,EAAc8B,MAAd9B,KAER+B,WAAWZ,QAAQ,WAAgB,GAE9BP,EAAWI,KAFmB,CACnCJ,EAAWC,KAAXD,EAAoBE,EAAQD,KADO,CAEX,UAAmB,4BAANmB,+CAC1BJ,SADX,CAFmC,CAMX,UAAY,CAApC,CANR,EAvCsB,MAiDjBK,SAAW,WAAiB,IACzBC,OAAOC,SAAPD,MACQrB,YACL,IAAqB,QAAjB,UAAJ,CAA+B,IAC5BuB,GAAUtB,EAAQiB,UAARjB,CAAmBuB,MAAnBvB,CAA0B,WAAY,OAC3CwB,GAAOtB,IAAPsB,IADK,CAAAxB,EAGZL,MAAMC,OAAND,KAA0B2B,EAAQrC,MAJJ,KAKtBc,MAAQuB,EAAQ,CAARA,EAAWvB,KALG,CAA/B,CAAA,aAQKe,6DAXhB,kNAzDEN,EAAS,OACJ,qCADI,MAEL,iBAFK,SAGF,oCAHE,OAIJ,oCAJI,UAKD,iGALC,WCARiB,QCDA,WAA4B,OACxB"}